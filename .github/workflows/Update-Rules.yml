name: Update Rules
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'
  push:
    paths:
      - 'data/python/rules_generator/**'
      - 'data/python/utils/**'
      - 'data/source/**'
      - 'data/mod/**'
    
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Detect default branch
        id: branch
        run: |
          DEFAULT_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
          echo "Default branch is $DEFAULT_BRANCH"
          echo "branch=$DEFAULT_BRANCH" >> $GITHUB_OUTPUT

      - name: Check for file changes
        id: changes
        uses: tj-actions/changed-files@v42
        with:
          files: |
            data/python/rules_generator/**
            data/python/utils/**
            data/source/**
            data/mod/**
            
      - name: Download Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        continue-on-error: true
        run: |
          python ./data/python/utils/dl.py  # 辅助脚本在utils目录
          
      - name: Merge Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/utils/merge.py  # 辅助脚本在utils目录
          
      - name: Generate dns Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/filter-dns.py  # 规则生成脚本在rules_generator目录

      - name: Generate qx Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/qx.py  # 规则生成脚本在rules_generator目录

      - name: Generate filter Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/utils/filter-ad.py  # 辅助脚本在utils目录

      - name: Generate mihomo Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/mihomo.py  # 规则生成脚本在rules_generator目录

      - name: Generate loon Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/loon.py  # 规则生成脚本在rules_generator目录

      # 新增的6个规则生成步骤
      - name: Generate Hosts Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/hosts_generator.py

      - name: Generate Clash Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/clash_generator.py

      - name: Generate SingBox Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/singbox_generator.py

      - name: Generate Shadowrocket Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/shadowrocket_generator.py

      - name: Generate Invizible Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/invizible_generator.py

      - name: Generate AdClose Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/adclose_generator.py

      - name: Generate Domain List
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/domain_list.py  # 规则生成脚本在rules_generator目录

      - name: Update Title & ReadMe
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/utils/title.py  # 辅助脚本在utils目录
          python ./data/python/utils/clean-readme.py  # 辅助脚本在utils目录

      - name: Configure Git
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit Changes
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          git add --all
          git commit -m "Updated at $(TZ=UTC-8 date +'%Y-%m-%d %H:%M:%S')（北京时间）" || echo "No changes to commit"
      
      - name: Sync and Push Changes
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        env:
          DEFAULT_BRANCH: ${{ steps.branch.outputs.branch }}
        run: |
          for i in 1 2 3; do
            git pull --rebase origin "$DEFAULT_BRANCH"
            git push origin "$DEFAULT_BRANCH" && break || sleep 5
          done

      - name: Delete workflow runs 
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
