name: Update Rules
on: 
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: '0 */12 * * *'  # 每12小时自动执行
  push:
    paths:
      - 'data/python/utils/**'  # 监测utils目录下的脚本变更
      - 'data/source/**'       # 监测源规则变更
      - 'data/mod/**'          # 监测修改规则变更

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 拉取完整历史

      - name: Detect default branch
        id: branch
        run: |
          DEFAULT_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
          echo "branch=$DEFAULT_BRANCH" >> $GITHUB_OUTPUT

      - name: Check for file changes
        id: changes
        uses: tj-actions/changed-files@v42
        with:
          files: |
            data/python/utils/**
            data/source/**
            data/mod/**

      - name: Set up Python
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Debug file structure
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          echo "Current directory: $(pwd)"
          ls -la data/python/utils/  # 查看utils目录下的脚本

      - name: Download Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python data/python/utils/dl.py  # 修正路径

      - name: Merge Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          # 验证merge.py是否存在于utils目录
          if [ -f "data/python/utils/merge.py" ]; then
            python data/python/utils/merge.py
          else
            echo "Error: merge.py not found at data/python/utils/merge.py"
            exit 1
          fi

      - name: Generate DNS Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python data/python/filter-dns.py  # 若该文件也在utils下，需同步修正为data/python/utils/filter-dns.py

      - name: Generate Quantumult X Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python data/python/qx.py  # 若在utils下，修正为data/python/utils/qx.py

      - name: Generate AdGuard Filter Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python data/python/utils/filter-ad.py  # 修正路径

      - name: Generate Mihomo Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python data/python/mihomo.py  # 若在utils下，修正为data/python/utils/mihomo.py

      - name: Generate Loon Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python data/python/loon.py  # 若在utils下，修正为data/python/utils/loon.py

      - name: Generate Domain List
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python data/python/domain_list.py  # 若在utils下，修正为data/python/utils/domain_list.py

      - name: Update Title & README
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python data/python/utils/title.py  # 修正路径
          python data/python/utils/clean-readme.py  # 修正路径

      - name: Configure Git
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit Changes
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          git add --all
          git commit -m "Updated at $(TZ=UTC-8 date +'%Y-%m-%d %H:%M:%S')（北京时间）" || echo "No changes to commit"

      - name: Sync and Push Changes
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        env:
          DEFAULT_BRANCH: ${{ steps.branch.outputs.branch }}
        run: |
          for i in 1 2 3; do
            git pull --rebase origin "$DEFAULT_BRANCH"
            git push origin "$DEFAULT_BRANCH" && break || sleep 5
          done

      - name: Cleanup workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
