name: Update Rules
on: 
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'
  push:
    paths:
      - 'data/python/**'
      - 'data/source/**'
      - 'data/mod/**'
    
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Detect default branch
        id: branch
        run: |
          DEFAULT_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
          echo "Default branch is $DEFAULT_BRANCH"
          echo "branch=$DEFAULT_BRANCH" >> $GITHUB_OUTPUT

      - name: Check for file changes
        id: changes
        uses: tj-actions/changed-files@v42
        with:
          files: |
            data/python/**
            data/source/**
            data/mod/**
            
      # 基础工具脚本（数据准备阶段）
      - name: Download Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        continue-on-error: true
        run: |
          python ./data/python/utils/dl.py
          
      - name: Merge Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/utils/merge.py
          
      - name: Filter Ad Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/utils/filter-ad.py

      # 核心规则生成（基础规则）
      - name: Generate DNS Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/filter-dns.py

      - name: Generate Domain List
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/domain_list.py

      # 客户端专用规则生成
      - name: Generate Quantumult X Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/qx.py

      - name: Generate Loon Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/loon.py

      - name: Generate Mihomo Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/mihomo.py

      - name: Generate Clash Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/clash.py

      - name: Generate Shadowrocket Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/shadowrocket.py

      - name: Generate Singbox Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/singbox.py

      - name: Generate Invizible Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/invizible.py

      - name: Generate Hosts Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/hosts.py

      - name: Generate Adclose Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/rules_generator/adclose.py

      # 收尾处理脚本
      - name: Update Title & Metadata
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/utils/title.py

      - name: Clean README
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/utils/clean-readme.py

      # 版本控制
      - name: Configure Git
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit Changes
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          git add --all
          git commit -m "Updated at $(TZ=UTC-8 date +'%Y-%m-%d %H:%M:%S')（北京时间）" || echo "No changes to commit"
      
      - name: Sync and Push Changes
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        env:
          DEFAULT_BRANCH: ${{ steps.branch.outputs.branch }}
        run: |
          for i in 1 2 3; do
            git pull --rebase origin "$DEFAULT_BRANCH"
            git push origin "$DEFAULT_BRANCH" && break || sleep 5
          done

      - name: Delete workflow runs 
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
